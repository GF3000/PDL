P -> B P | F P | lambda
B -> if ( E ) S | S | let T id ; | for ( Y ; E ; D ) { C }
Y -> id = E
T -> int | boolean | string
S -> id = E ; | id ( L ) ; | put E ; | get E ; | return X ;
X -> E | lambda
E -> R
R -> R < U | U
U -> U + V | V | D | ! V
V -> id | ( E ) | id ( L ) | entero | cadena | true | false
D -> -- id
L -> E Q
Q -> , E Q | lambda
F -> F1 { C }
F1 -> F2 ( A )
F2 -> function id H
H -> T | void | lambda
A -> T id K | lambda
K -> , T id K | lambda
C -> B C | lambda
